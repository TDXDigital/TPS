{% extends 'baseAdmin.twig' %}

{% block headScripts %}


    <link rel="stylesheet" href="{{siteUrl}}/js/jquery/css/smoothness/jquery-ui-1.10.0.custom.min.css"/>

    <style type="text/css">
        td label {
           display: block;
           text-align: center;
        }
    </style>
{% endblock %}

{% block title %}{{title|default('Administration Dashboard')}}{% endblock %}
{% block breadcrumb %}
<ol class="breadcrumb">
    <li>
        <i class="fa fa-dashboard"></i>  <a href="/">Dashboard</a>
    </li>
 </ol>
{% endblock %}
{% block content %}
    {% if flash.error %}
        <div class="row">
            <div class="alert alert-danger">
                <strong>Error</strong> {{flash.error}}
            </div>
        </div>
    {% endif %}
    {% if flash.success %}
        <div class="row">
            <div class="alert alert-success">
                <strong>Success</strong> {{flash.success}}
            </div>
        </div>
    {% endif %}
<div class="row">
	<form role="form" method="post" action="./chart" >
        <div class="col-md-3">
           
                <fieldset>
                    <div id="sort_group" class="form-group input-group">
                        <label for="startDate" class="input-group-addon">Start Date</label>
                        <input type="text" class="form-control datepicker" required
                               name="startDate" id="startDate" placeholder="2000-01-01"
                               pattern="(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))"
                               value="{{ startDate?? startDate | date_modify('-7 day')|date('Y-m-d') }}">
                    </div>
                </fieldset>
            </div>
             <div class="col-md-3">
                <fieldset>
                    <div id="sort_group" class="form-group input-group">
                        <label for="endDate" class="input-group-addon">End Date</label>
                        <input type="text" class="form-control datepicker" required
                               name="endDate" id="endDate" placeholder="2000-01-02"
                               pattern="(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))"
                                value="{{ endDate |date('Y-m-d') }}">
                    </div>
                </fieldset>
          	</div>
          		<input type="submit" class="btn btn-primary btn-md"/>
            </form>
        </div>

    <hr size="30">
    <table class='table table-bordered table-hover'>
        <thead>
            <tr>
                <th>Rank</th>
                <th>Artist</th>
                <th>Album</th>
                <th>Score</th>
                <th>View</th>
            </tr>
        </thead>
        <tfoot>
            <tr>
               <th>Rank</th>
                <th>Artist</th>
                <th>Album</th>
                <th>Score</th>
                <th>View</th>
            </tr>
        </tfoot>
        <tbody id='sortable'>
            {% for chart in charts %}
                <tr>
                    <td>{{loop.index}}</td>
                    <td>{{chart.artist}}</td>
                    <td>{{chart.album}}</td>
                    <td>{{chart.totalScore}}</td>
                    <td><a href='../Reports/p2SongSearch.php?playlist={{chart.SmallCode}}&from={{sDate}}&to={{endDate}}'>
                    View</a></td>
                </tr>
            {% endfor %} 
        </tbody>
    </table>
{% endblock %}
{% block lastScripts %}

{#<script src="{{siteUrl}}/TPSBIN/JS/playlistChart.js"></script>#}
<script src="{{siteUrl}}/js/chosen.jquery.min.js"></script>
<script type="text/javascript" src="{{siteUrl}}/js/jquery/js/jquery-ui-1.11.0/jquery-ui.min.js"></script>
<script>
    function fixWidthHelper(e, ui) {
        ui.children().each(function() {
            $(this).width($(this).width());
        });
        return ui;
    }

    function isDescending(arr) {
        return arr.every(function (x, i) {
            return i === 0 || x <= arr[i - 1];
        });
    }

    function highlightTies() {
	rows = $('#sortable').children();
	scores = [];
	for (var i = 0; i < rows.length; i++)
	    scores.push(parseFloat(rows[i].children[3].innerText));
	
	previousScore = null;
	ties = [];
	for (var i = 0; i < scores.length; i++) {
	    if (scores[i] == previousScore) {
		tie_id = null;
		for (var j = 0; j < ties.length; j++) {
		    if (scores[ties[j][0]] == scores[i]) {
			tie_id = j;
			break;
		    }
		}
		if (tie_id == null)
		    ties.push([i-1, i])
		else
		    ties[tie_id].push(i)
	    }
	    previousScore = scores[i];
	}

	colors = ['lightgrey', 'darkgrey'];
	for (var i = 0; i < ties.length; i++)
	    for (var j = 0; j < ties[i].length; j++)
		$($('#sortable').children()[ties[i][j]]).addClass('tied').css('background-color', colors[i % 2]);
    }

    function shuffleRanks(start_pos, end_pos) {
	if (start_pos == end_pos)
	    return;

	movedDown = start_pos < end_pos;
	rows = $('#sortable').children();
	rowMoved = rows[end_pos];
	rankMoved = parseInt(rowMoved.children[0].innerText);
	cache = rankMoved;
	swapped = 0;

	for (var i = start_pos;  movedDown ? i <= end_pos : i >= end_pos; movedDown ? i++ : i--) {
	    if (swapped == 0) { // The first one that needs to be switched
		cache = parseInt(rows[i].children[0].innerText);
		rows[i].children[0].innerText = rankMoved;
	    } else {
		temp = cache;
		cache = parseInt(rows[i].children[0].innerText);
		rows[i].children[0].innerText = temp;
	    }
	    swapped++;
	}
    }

    $(function() {
	highlightTies();

        // Activate chosen elements
        $(".chosen-select").chosen();
        $( ".datepicker" ).datepicker({
            numberOfMonths: 3,
            showButtonPanel: true,
            dateFormat: "yy-mm-dd"
        });

	// Make table sortable
	$('#sortable').sortable({
	    items: 'tr.tied',
	    helper: fixWidthHelper,
	    start: function(event, ui) {
		var start_pos = ui.item.index();
		var orig_order = $('#sortable').children();
		ui.item.data('start_pos', start_pos);
		ui.item.data('orig_order', orig_order);
	    },
	    deactivate: function(event, ui) {
		var orig_order = ui.item.data('orig_order');
		var start_pos = ui.item.data('start_pos');
		var end_pos = ui.item.index();
		rows = $('#sortable').children();
		scores = [];
		for (var i = 0; i < rows.length; i++)
		    scores.push(parseFloat(rows[i].children[3].innerText));
		if (isDescending(scores))
		    shuffleRanks(start_pos, end_pos);
		else
		    ui.sender.sortable('cancel');
	    }
	});

	$('#sortable').disableSelection();
      });

</script>
{% endblock %}
